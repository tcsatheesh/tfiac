name: "Terraform Import DNS"

on: workflow_dispatch

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate.
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  terraform-import:
    name: "Terraform Import"
    runs-on: ubuntu-latest
    environment: dev
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./scripts/requirements.txt

      # Install the latest version of the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          cd terraform/dns
          terraform init \
          -backend-config="subscription_id=$(TERRAFORM_STATE_AZURE_SUBSCRIPTION_ID)" \
          -backend-config="resource_group_name=$(TERRAFORM_STATE_RESOURCE_GROUP)" \
          -backend-config="storage_account_name=$(TERRAFORM_STATE_STORAGE_ACCOUNT_NAME)" \
          -backend-config="container_name=$(TERRAFORM_STATE_CONTAINER_NAME) " \
          -backend-config="key=global/dns.tfstate"

      # Import the terraform state.
      - name: Terraform Import
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          python3 ./scripts/src/import/dns.py --yes
